name: 'regression'

on:
  workflow_dispatch:

jobs:
  linux-gcc:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y \
          g++-7 \
          tclsh \
          default-jre \
          cmake \
          build-essential \
          swig \
          google-perftools \
          libgoogle-perftools-dev \
          uuid-dev \
          lcov
        sudo ln -sf /usr/bin/g++-7 /usr/bin/g++
        sudo ln -sf /usr/bin/gcc-7 /usr/bin/gcc
        sudo ln -sf /usr/bin/gcov-7 /usr/bin/gcov

    - uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Configure shell
      run: |
        echo 'CC=gcc-7' >> $GITHUB_ENV
        echo 'CXX=g++-7' >> $GITHUB_ENV
        echo 'PATH=/usr/lib/ccache:'"$PATH" >> $GITHUB_ENV
        echo 'PREFIX=/tmp/surelog-install' >> $GITHUB_ENV

    - name: Show shell configuration
      run: |
        env
        which cmake && cmake --version
        which make && make --version
        which swig && swig -version
        which java && java -version
        which python && python --version
        which ninja && ninja --version
        which tclsh && echo 'puts [info patchlevel];exit 0' | tclsh
        which $CC && $CC --version
        which $CXX && $CXX --version

    - name: Regression
      run: make regression

  windows-msvc:
    runs-on: windows-latest

    defaults:
      run:
        shell: cmd

    steps:
    - name: Install Core Dependencies
      run: |
        choco install -y make
        choco install -y swig --side-by-side --version=3.0.12

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        architecture: x64

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        java-package: jre
        architecture: x64

    - run: git config --global core.autocrlf input
      shell: bash

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Build & Test
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"

        set CMAKE_GENERATOR=Ninja
        set CC=cl
        set CXX=cl
        set NO_TCMALLOC=On
        set PREFIX=%GITHUB_WORKSPACE%\install
        set CPU_CORES=%NUMBER_OF_PROCESSORS%

        set MAKE_DIR=C:\make\bin
        set TCL_DIR=%PROGRAMFILES%\Git\mingw64\bin
        set SWIG_DIR=%PROGRMDATA%\chocolatey\lib\swig\tools\install\swigwin-3.0.12
        set PATH=%pythonLocation%;%SWIG_DIR%;%JAVA_HOME%\bin;%MAKE_DIR%;%TCL_DIR%;%PATH%

        set
        where cmake && cmake --version
        where make && make --version
        where swig && swig -version
        where java && java -version
        where python && python --version
        where ninja && ninja --version

        make regression
