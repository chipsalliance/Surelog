[INF:CM0023] Creating log file ${SURELOG_DIR}/build/regression/LetExpr/slpp_all/surelog.log.

AST_DEBUG_BEGIN
LIB:  work
FILE: ${SURELOG_DIR}/tests/LetExpr/dut.sv
n<> u<0> t<_INVALID_> f<0> l<0:0>
n<> u<1> t<Null_rule> p<173> s<172> l<2:1> el<1:2>
n<module> u<2> t<Module_keyword> p<6> s<3> l<2:1> el<2:7>
n<m> u<3> t<StringConst> p<6> s<5> l<2:8> el<2:9>
n<> u<4> t<Port> p<5> l<2:25> el<2:25>
n<> u<5> t<List_of_ports> p<6> c<4> l<2:9> el<2:26>
n<> u<6> t<Module_nonansi_header> p<170> c<2> s<19> l<2:1> el<2:27>
n<> u<7> t<IntVec_TypeLogic> p<8> l<3:1> el<3:6>
n<> u<8> t<Data_type> p<12> c<7> s<11> l<3:1> el<3:6>
n<a> u<9> t<StringConst> p<10> l<3:7> el<3:8>
n<> u<10> t<Variable_decl_assignment> p<11> c<9> l<3:7> el<3:8>
n<> u<11> t<List_of_variable_decl_assignments> p<12> c<10> l<3:7> el<3:8>
n<> u<12> t<Variable_declaration> p<13> c<8> l<3:1> el<3:9>
n<> u<13> t<Data_declaration> p<14> c<12> l<3:1> el<3:9>
n<> u<14> t<Package_or_generate_item_declaration> p<15> c<13> l<3:1> el<3:9>
n<> u<15> t<Module_or_generate_item_declaration> p<16> c<14> l<3:1> el<3:9>
n<> u<16> t<Module_common_item> p<17> c<15> l<3:1> el<3:9>
n<> u<17> t<Module_or_generate_item> p<18> c<16> l<3:1> el<3:9>
n<> u<18> t<Non_port_module_item> p<19> c<17> l<3:1> el<3:9>
n<> u<19> t<Module_item> p<170> c<18> s<43> l<3:1> el<3:9>
n<p1> u<20> t<StringConst> p<36> s<25> l<4:5> el<4:7>
n<> u<21> t<Data_type_or_implicit> p<22> l<4:8> el<4:8>
n<> u<22> t<Let_formal_type> p<24> c<21> s<23> l<4:8> el<4:8>
n<x> u<23> t<StringConst> p<24> l<4:8> el<4:9>
n<> u<24> t<Let_port_item> p<25> c<22> l<4:8> el<4:9>
n<> u<25> t<Let_port_list> p<36> c<24> s<35> l<4:8> el<4:9>
n<> u<26> t<Dollar_keyword> p<33> s<27> l<4:13> el<4:14>
n<past> u<27> t<StringConst> p<33> s<32> l<4:14> el<4:18>
n<x> u<28> t<StringConst> p<29> l<4:19> el<4:20>
n<> u<29> t<Primary_literal> p<30> c<28> l<4:19> el<4:20>
n<> u<30> t<Primary> p<31> c<29> l<4:19> el<4:20>
n<> u<31> t<Expression> p<32> c<30> l<4:19> el<4:20>
n<> u<32> t<List_of_arguments> p<33> c<31> l<4:19> el<4:20>
n<> u<33> t<Complex_func_call> p<34> c<26> l<4:13> el<4:21>
n<> u<34> t<Primary> p<35> c<33> l<4:13> el<4:21>
n<> u<35> t<Expression> p<36> c<34> l<4:13> el<4:21>
n<> u<36> t<Let_declaration> p<37> c<20> l<4:1> el<4:22>
n<> u<37> t<Assertion_item_declaration> p<38> c<36> l<4:1> el<4:22>
n<> u<38> t<Package_or_generate_item_declaration> p<39> c<37> l<4:1> el<4:22>
n<> u<39> t<Module_or_generate_item_declaration> p<40> c<38> l<4:1> el<4:22>
n<> u<40> t<Module_common_item> p<41> c<39> l<4:1> el<4:22>
n<> u<41> t<Module_or_generate_item> p<42> c<40> l<4:1> el<4:22>
n<> u<42> t<Non_port_module_item> p<43> c<41> l<4:1> el<4:22>
n<> u<43> t<Module_item> p<170> c<42> s<76> l<4:1> el<4:22>
n<p2> u<44> t<StringConst> p<69> s<49> l<6:5> el<6:7>
n<> u<45> t<Data_type_or_implicit> p<46> l<6:8> el<6:8>
n<> u<46> t<Let_formal_type> p<48> c<45> s<47> l<6:8> el<6:8>
n<x> u<47> t<StringConst> p<48> l<6:8> el<6:9>
n<> u<48> t<Let_port_item> p<49> c<46> l<6:8> el<6:9>
n<> u<49> t<Let_port_list> p<69> c<48> s<68> l<6:8> el<6:9>
n<$past> u<50> t<StringConst> p<51> l<6:14> el<6:18>
n<> u<51> t<System_task_names> p<66> c<50> s<58> l<6:13> el<6:18>
n<x> u<52> t<StringConst> p<53> l<6:19> el<6:20>
n<> u<53> t<Primary_literal> p<54> c<52> l<6:19> el<6:20>
n<> u<54> t<Primary> p<55> c<53> l<6:19> el<6:20>
n<> u<55> t<Expression> p<58> c<54> s<56> l<6:19> el<6:20>
n<> u<56> t<Argument> p<58> s<57> l<6:21> el<6:21>
n<> u<57> t<Argument> p<58> l<6:22> el<6:22>
n<> u<58> t<List_of_arguments> p<66> c<55> s<65> l<6:19> el<6:22>
n<> u<59> t<Edge_Posedge> p<64> s<63> l<6:25> el<6:32>
n<clock> u<60> t<StringConst> p<61> l<6:33> el<6:38>
n<> u<61> t<Primary_literal> p<62> c<60> l<6:33> el<6:38>
n<> u<62> t<Primary> p<63> c<61> l<6:33> el<6:38>
n<> u<63> t<Expression> p<64> c<62> l<6:33> el<6:38>
n<> u<64> t<Event_expression> p<65> c<59> l<6:25> el<6:38>
n<> u<65> t<Clocking_event> p<66> c<64> l<6:23> el<6:39>
n<> u<66> t<System_task> p<67> c<51> l<6:13> el<6:40>
n<> u<67> t<Primary> p<68> c<66> l<6:13> el<6:40>
n<> u<68> t<Expression> p<69> c<67> l<6:13> el<6:40>
n<> u<69> t<Let_declaration> p<70> c<44> l<6:1> el<6:41>
n<> u<70> t<Assertion_item_declaration> p<71> c<69> l<6:1> el<6:41>
n<> u<71> t<Package_or_generate_item_declaration> p<72> c<70> l<6:1> el<6:41>
n<> u<72> t<Module_or_generate_item_declaration> p<73> c<71> l<6:1> el<6:41>
n<> u<73> t<Module_common_item> p<74> c<72> l<6:1> el<6:41>
n<> u<74> t<Module_or_generate_item> p<75> c<73> l<6:1> el<6:41>
n<> u<75> t<Non_port_module_item> p<76> c<74> l<6:1> el<6:41>
n<> u<76> t<Module_item> p<170> c<75> s<100> l<6:1> el<6:41>
n<s> u<77> t<StringConst> p<93> s<82> l<7:5> el<7:6>
n<> u<78> t<Data_type_or_implicit> p<79> l<7:7> el<7:7>
n<> u<79> t<Let_formal_type> p<81> c<78> s<80> l<7:7> el<7:7>
n<x> u<80> t<StringConst> p<81> l<7:7> el<7:8>
n<> u<81> t<Let_port_item> p<82> c<79> l<7:7> el<7:8>
n<> u<82> t<Let_port_list> p<93> c<81> s<92> l<7:7> el<7:8>
n<> u<83> t<Dollar_keyword> p<90> s<84> l<7:12> el<7:13>
n<sampled> u<84> t<StringConst> p<90> s<89> l<7:13> el<7:20>
n<x> u<85> t<StringConst> p<86> l<7:21> el<7:22>
n<> u<86> t<Primary_literal> p<87> c<85> l<7:21> el<7:22>
n<> u<87> t<Primary> p<88> c<86> l<7:21> el<7:22>
n<> u<88> t<Expression> p<89> c<87> l<7:21> el<7:22>
n<> u<89> t<List_of_arguments> p<90> c<88> l<7:21> el<7:22>
n<> u<90> t<Complex_func_call> p<91> c<83> l<7:12> el<7:23>
n<> u<91> t<Primary> p<92> c<90> l<7:12> el<7:23>
n<> u<92> t<Expression> p<93> c<91> l<7:12> el<7:23>
n<> u<93> t<Let_declaration> p<94> c<77> l<7:1> el<7:24>
n<> u<94> t<Assertion_item_declaration> p<95> c<93> l<7:1> el<7:24>
n<> u<95> t<Package_or_generate_item_declaration> p<96> c<94> l<7:1> el<7:24>
n<> u<96> t<Module_or_generate_item_declaration> p<97> c<95> l<7:1> el<7:24>
n<> u<97> t<Module_common_item> p<98> c<96> l<7:1> el<7:24>
n<> u<98> t<Module_or_generate_item> p<99> c<97> l<7:1> el<7:24>
n<> u<99> t<Non_port_module_item> p<100> c<98> l<7:1> el<7:24>
n<> u<100> t<Module_item> p<170> c<99> s<167> l<7:1> el<7:24>
n<> u<101> t<AlwaysKeywd_Comb> p<163> s<162> l<9:1> el<9:12>
n<a1> u<102> t<StringConst> p<119> s<118> l<10:1> el<10:3>
n<p1> u<103> t<StringConst> p<109> s<108> l<10:12> el<10:14>
n<a> u<104> t<StringConst> p<105> l<10:15> el<10:16>
n<> u<105> t<Primary_literal> p<106> c<104> l<10:15> el<10:16>
n<> u<106> t<Primary> p<107> c<105> l<10:15> el<10:16>
n<> u<107> t<Expression> p<108> c<106> l<10:15> el<10:16>
n<> u<108> t<List_of_arguments> p<109> c<107> l<10:15> el<10:16>
n<> u<109> t<Complex_func_call> p<110> c<103> l<10:12> el<10:17>
n<> u<110> t<Primary> p<111> c<109> l<10:12> el<10:17>
n<> u<111> t<Expression> p<114> c<110> s<113> l<10:12> el<10:17>
n<> u<112> t<Statement_or_null> p<113> l<10:18> el<10:19>
n<> u<113> t<Action_block> p<114> c<112> l<10:18> el<10:19>
n<> u<114> t<Simple_immediate_assert_statement> p<115> c<111> l<10:5> el<10:19>
n<> u<115> t<Simple_immediate_assertion_statement> p<116> c<114> l<10:5> el<10:19>
n<> u<116> t<Immediate_assertion_statement> p<117> c<115> l<10:5> el<10:19>
n<> u<117> t<Procedural_assertion_statement> p<118> c<116> l<10:5> el<10:19>
n<> u<118> t<Statement_item> p<119> c<117> l<10:5> el<10:19>
n<> u<119> t<Statement> p<120> c<102> l<10:1> el<10:19>
n<> u<120> t<Statement_or_null> p<160> c<119> s<139> l<10:1> el<10:19>
n<a2> u<121> t<StringConst> p<138> s<137> l<11:1> el<11:3>
n<p2> u<122> t<StringConst> p<128> s<127> l<11:12> el<11:14>
n<a> u<123> t<StringConst> p<124> l<11:15> el<11:16>
n<> u<124> t<Primary_literal> p<125> c<123> l<11:15> el<11:16>
n<> u<125> t<Primary> p<126> c<124> l<11:15> el<11:16>
n<> u<126> t<Expression> p<127> c<125> l<11:15> el<11:16>
n<> u<127> t<List_of_arguments> p<128> c<126> l<11:15> el<11:16>
n<> u<128> t<Complex_func_call> p<129> c<122> l<11:12> el<11:17>
n<> u<129> t<Primary> p<130> c<128> l<11:12> el<11:17>
n<> u<130> t<Expression> p<133> c<129> s<132> l<11:12> el<11:17>
n<> u<131> t<Statement_or_null> p<132> l<11:18> el<11:19>
n<> u<132> t<Action_block> p<133> c<131> l<11:18> el<11:19>
n<> u<133> t<Simple_immediate_assert_statement> p<134> c<130> l<11:5> el<11:19>
n<> u<134> t<Simple_immediate_assertion_statement> p<135> c<133> l<11:5> el<11:19>
n<> u<135> t<Immediate_assertion_statement> p<136> c<134> l<11:5> el<11:19>
n<> u<136> t<Procedural_assertion_statement> p<137> c<135> l<11:5> el<11:19>
n<> u<137> t<Statement_item> p<138> c<136> l<11:5> el<11:19>
n<> u<138> t<Statement> p<139> c<121> l<11:1> el<11:19>
n<> u<139> t<Statement_or_null> p<160> c<138> s<158> l<11:1> el<11:19>
n<a3> u<140> t<StringConst> p<157> s<156> l<12:1> el<12:3>
n<s> u<141> t<StringConst> p<147> s<146> l<12:12> el<12:13>
n<a> u<142> t<StringConst> p<143> l<12:14> el<12:15>
n<> u<143> t<Primary_literal> p<144> c<142> l<12:14> el<12:15>
n<> u<144> t<Primary> p<145> c<143> l<12:14> el<12:15>
n<> u<145> t<Expression> p<146> c<144> l<12:14> el<12:15>
n<> u<146> t<List_of_arguments> p<147> c<145> l<12:14> el<12:15>
n<> u<147> t<Complex_func_call> p<148> c<141> l<12:12> el<12:16>
n<> u<148> t<Primary> p<149> c<147> l<12:12> el<12:16>
n<> u<149> t<Expression> p<152> c<148> s<151> l<12:12> el<12:16>
n<> u<150> t<Statement_or_null> p<151> l<12:17> el<12:18>
n<> u<151> t<Action_block> p<152> c<150> l<12:17> el<12:18>
n<> u<152> t<Simple_immediate_assert_statement> p<153> c<149> l<12:5> el<12:18>
n<> u<153> t<Simple_immediate_assertion_statement> p<154> c<152> l<12:5> el<12:18>
n<> u<154> t<Immediate_assertion_statement> p<155> c<153> l<12:5> el<12:18>
n<> u<155> t<Procedural_assertion_statement> p<156> c<154> l<12:5> el<12:18>
n<> u<156> t<Statement_item> p<157> c<155> l<12:5> el<12:18>
n<> u<157> t<Statement> p<158> c<140> l<12:1> el<12:18>
n<> u<158> t<Statement_or_null> p<160> c<157> s<159> l<12:1> el<12:18>
n<> u<159> t<End> p<160> l<13:1> el<13:4>
n<> u<160> t<Seq_block> p<161> c<120> l<9:13> el<13:4>
n<> u<161> t<Statement_item> p<162> c<160> l<9:13> el<13:4>
n<> u<162> t<Statement> p<163> c<161> l<9:13> el<13:4>
n<> u<163> t<Always_construct> p<164> c<101> l<9:1> el<13:4>
n<> u<164> t<Module_common_item> p<165> c<163> l<9:1> el<13:4>
n<> u<165> t<Module_or_generate_item> p<166> c<164> l<9:1> el<13:4>
n<> u<166> t<Non_port_module_item> p<167> c<165> l<9:1> el<13:4>
n<> u<167> t<Module_item> p<170> c<166> s<169> l<9:1> el<13:4>
n<m> u<168> t<StringConst> p<170> l<16:13> el<16:14>
n<> u<169> t<Endmodule> p<170> s<168> l<16:1> el<16:10>
n<> u<170> t<Module_declaration> p<171> c<6> l<2:1> el<16:14>
n<> u<171> t<Description> p<172> c<170> l<2:1> el<16:14>
n<> u<172> t<Source_text> p<173> c<171> l<2:1> el<16:14>
n<> u<173> t<Top_level_rule> c<1> l<2:1> el<16:14>
AST_DEBUG_END
[WRN:PA0205] ${SURELOG_DIR}/tests/LetExpr/dut.sv:2:1: No timescale set for "m".

[INF:CP0300] Compilation...

[INF:CP0303] ${SURELOG_DIR}/tests/LetExpr/dut.sv:2:1: Compile module "work@m".

[INF:EL0526] Design Elaboration...

[NTE:EL0503] ${SURELOG_DIR}/tests/LetExpr/dut.sv:2:1: Top level module "work@m".

[NTE:EL0508] Nb Top level modules: 1.

[NTE:EL0509] Max instance depth: 1.

[NTE:EL0510] Nb instances: 1.

[NTE:EL0511] Nb leaf instances: 0.

[INF:UH0706] Creating UHDM Model...

=== UHDM Object Stats Begin (Non-Elaborated Model) ===
always                                                 1
begin                                                  1
constant                                               2
design                                                 1
immediate_assert                                       3
io_decl                                                3
let_decl                                               3
let_expr                                               3
logic_net                                              1
logic_typespec                                         2
logic_var                                              1
module_inst                                            2
operation                                              1
ref_obj                                                7
ref_typespec                                           2
seq_formal_decl                                        3
sys_func_call                                          3
=== UHDM Object Stats End ===
[INF:UH0707] Elaborating UHDM...

=== UHDM Object Stats Begin (Elaborated Model) ===
always                                                 2
begin                                                  2
constant                                               2
design                                                 1
immediate_assert                                       6
io_decl                                                3
let_decl                                               9
let_expr                                               6
logic_net                                              1
logic_typespec                                         2
logic_var                                              1
module_inst                                            2
operation                                              3
ref_obj                                               18
ref_typespec                                           2
seq_formal_decl                                        3
sys_func_call                                          9
=== UHDM Object Stats End ===
[INF:UH0708] Writing UHDM DB: ${SURELOG_DIR}/build/regression/LetExpr/slpp_all/surelog.uhdm ...

[INF:UH0709] Writing UHDM Html Coverage: ${SURELOG_DIR}/build/regression/LetExpr/slpp_all/checker/surelog.chk.html ...

[INF:UH0710] Loading UHDM DB: ${SURELOG_DIR}/build/regression/LetExpr/slpp_all/surelog.uhdm ...

[INF:UH0711] Decompiling UHDM...

====== UHDM =======
design: (work@m)
|vpiElaborated:1
|vpiName:work@m
|uhdmallModules:
\_module_inst: work@m (work@m), file:${SURELOG_DIR}/tests/LetExpr/dut.sv, line:2:1, endln:16:14
  |vpiParent:
  \_design: (work@m)
  |vpiFullName:work@m
  |vpiLetDecl:
  \_let_decl: (p1), line:4:1, endln:4:22
    |vpiParent:
    \_module_inst: work@m (work@m), file:${SURELOG_DIR}/tests/LetExpr/dut.sv, line:2:1, endln:16:14
    |vpiExpr:
    \_sys_func_call: ($past), line:4:13, endln:4:21
      |vpiParent:
      \_let_decl: (p1), line:4:1, endln:4:22
      |vpiArgument:
      \_ref_obj: (work@m.p1.x), line:4:19, endln:4:20
        |vpiParent:
        \_sys_func_call: ($past), line:4:13, endln:4:21
        |vpiName:x
        |vpiFullName:work@m.p1.x
      |vpiName:$past
    |vpiName:p1
  |vpiLetDecl:
  \_let_decl: (p2), line:6:1, endln:6:41
    |vpiParent:
    \_module_inst: work@m (work@m), file:${SURELOG_DIR}/tests/LetExpr/dut.sv, line:2:1, endln:16:14
    |vpiExpr:
    \_sys_func_call: ($past), line:6:13, endln:6:18
      |vpiParent:
      \_let_decl: (p2), line:6:1, endln:6:41
      |vpiArgument:
      \_ref_obj: (work@m.p2.x), line:6:19, endln:6:20
        |vpiParent:
        \_sys_func_call: ($past), line:6:13, endln:6:18
        |vpiName:x
        |vpiFullName:work@m.p2.x
      |vpiArgument:
      \_constant: , line:6:21, endln:6:21
        |vpiDecompile:0
        |vpiSize:64
        |INT:0
        |vpiConstType:7
      |vpiArgument:
      \_constant: , line:6:22, endln:6:22
        |vpiDecompile:0
        |vpiSize:64
        |INT:0
        |vpiConstType:7
      |vpiArgument:
      \_operation: , line:6:25, endln:6:38
        |vpiParent:
        \_sys_func_call: ($past), line:6:13, endln:6:18
        |vpiOpType:39
        |vpiOperand:
        \_ref_obj: (work@m.p2.clock), line:6:33, endln:6:38
          |vpiParent:
          \_operation: , line:6:25, endln:6:38
          |vpiName:clock
          |vpiFullName:work@m.p2.clock
      |vpiName:$past
    |vpiName:p2
  |vpiLetDecl:
  \_let_decl: (s), line:7:1, endln:7:24
    |vpiParent:
    \_module_inst: work@m (work@m), file:${SURELOG_DIR}/tests/LetExpr/dut.sv, line:2:1, endln:16:14
    |vpiExpr:
    \_sys_func_call: ($sampled), line:7:12, endln:7:23
      |vpiParent:
      \_let_decl: (s), line:7:1, endln:7:24
      |vpiArgument:
      \_ref_obj: (work@m.s.x), line:7:21, endln:7:22
        |vpiParent:
        \_sys_func_call: ($sampled), line:7:12, endln:7:23
        |vpiName:x
        |vpiFullName:work@m.s.x
      |vpiName:$sampled
    |vpiName:s
  |vpiDefName:work@m
  |vpiNet:
  \_logic_net: (work@m.a), line:3:7, endln:3:8
    |vpiParent:
    \_module_inst: work@m (work@m), file:${SURELOG_DIR}/tests/LetExpr/dut.sv, line:2:1, endln:16:14
    |vpiTypespec:
    \_ref_typespec: (work@m.a)
      |vpiParent:
      \_logic_net: (work@m.a), line:3:7, endln:3:8
      |vpiFullName:work@m.a
      |vpiActual:
      \_logic_typespec: , line:3:1, endln:3:6
    |vpiName:a
    |vpiFullName:work@m.a
    |vpiNetType:36
  |vpiProcess:
  \_always: , line:9:1, endln:13:4
    |vpiParent:
    \_module_inst: work@m (work@m), file:${SURELOG_DIR}/tests/LetExpr/dut.sv, line:2:1, endln:16:14
    |vpiStmt:
    \_begin: (work@m), line:9:13, endln:13:4
      |vpiParent:
      \_always: , line:9:1, endln:13:4
      |vpiFullName:work@m
      |vpiStmt:
      \_immediate_assert: (a1), line:10:1, endln:10:19
        |vpiParent:
        \_begin: (work@m), line:9:13, endln:13:4
        |vpiName:a1
        |vpiExpr:
        \_let_expr: , line:10:12, endln:10:17
          |vpiParent:
          \_immediate_assert: (a1), line:10:1, endln:10:19
          |vpiArgument:
          \_ref_obj: (work@m.a1.a), line:10:15, endln:10:16
            |vpiParent:
            \_let_expr: , line:10:12, endln:10:17
            |vpiName:a
            |vpiFullName:work@m.a1.a
            |vpiActual:
            \_logic_net: (work@m.a), line:3:7, endln:3:8
          |vpiLetDecl:
          \_let_decl: (p1), line:4:1, endln:4:22
      |vpiStmt:
      \_immediate_assert: (a2), line:11:1, endln:11:19
        |vpiParent:
        \_begin: (work@m), line:9:13, endln:13:4
        |vpiName:a2
        |vpiExpr:
        \_let_expr: , line:11:12, endln:11:17
          |vpiParent:
          \_immediate_assert: (a2), line:11:1, endln:11:19
          |vpiArgument:
          \_ref_obj: (work@m.a2.a), line:11:15, endln:11:16
            |vpiParent:
            \_let_expr: , line:11:12, endln:11:17
            |vpiName:a
            |vpiFullName:work@m.a2.a
            |vpiActual:
            \_logic_net: (work@m.a), line:3:7, endln:3:8
          |vpiLetDecl:
          \_let_decl: (p2), line:6:1, endln:6:41
      |vpiStmt:
      \_immediate_assert: (a3), line:12:1, endln:12:18
        |vpiParent:
        \_begin: (work@m), line:9:13, endln:13:4
        |vpiName:a3
        |vpiExpr:
        \_let_expr: , line:12:12, endln:12:16
          |vpiParent:
          \_immediate_assert: (a3), line:12:1, endln:12:18
          |vpiArgument:
          \_ref_obj: (work@m.a3.a), line:12:14, endln:12:15
            |vpiParent:
            \_let_expr: , line:12:12, endln:12:16
            |vpiName:a
            |vpiFullName:work@m.a3.a
            |vpiActual:
            \_logic_net: (work@m.a), line:3:7, endln:3:8
          |vpiLetDecl:
          \_let_decl: (s), line:7:1, endln:7:24
    |vpiAlwaysType:2
|uhdmtopModules:
\_module_inst: work@m (work@m), file:${SURELOG_DIR}/tests/LetExpr/dut.sv, line:2:1, endln:16:14
  |vpiName:work@m
  |vpiVariables:
  \_logic_var: (work@m.a), line:3:7, endln:3:8
    |vpiParent:
    \_module_inst: work@m (work@m), file:${SURELOG_DIR}/tests/LetExpr/dut.sv, line:2:1, endln:16:14
    |vpiTypespec:
    \_ref_typespec: (work@m.a)
      |vpiParent:
      \_logic_var: (work@m.a), line:3:7, endln:3:8
      |vpiFullName:work@m.a
      |vpiActual:
      \_logic_typespec: , line:3:1, endln:3:6
    |vpiName:a
    |vpiFullName:work@m.a
    |vpiVisibility:1
  |vpiLetDecl:
  \_let_decl: (p1), line:4:1, endln:4:22
    |vpiParent:
    \_module_inst: work@m (work@m), file:${SURELOG_DIR}/tests/LetExpr/dut.sv, line:2:1, endln:16:14
    |vpiExpr:
    \_sys_func_call: ($past), line:4:13, endln:4:21
      |vpiParent:
      \_let_decl: (p1), line:4:1, endln:4:22
      |vpiArgument:
      \_ref_obj: (work@m.p1.x), line:4:19, endln:4:20
        |vpiParent:
        \_sys_func_call: ($past), line:4:13, endln:4:21
        |vpiName:x
        |vpiFullName:work@m.p1.x
      |vpiName:$past
    |vpiName:p1
  |vpiLetDecl:
  \_let_decl: (p2), line:6:1, endln:6:41
    |vpiParent:
    \_module_inst: work@m (work@m), file:${SURELOG_DIR}/tests/LetExpr/dut.sv, line:2:1, endln:16:14
    |vpiExpr:
    \_sys_func_call: ($past), line:6:13, endln:6:18
      |vpiParent:
      \_let_decl: (p2), line:6:1, endln:6:41
      |vpiArgument:
      \_ref_obj: (work@m.p2.x), line:6:19, endln:6:20
        |vpiParent:
        \_sys_func_call: ($past), line:6:13, endln:6:18
        |vpiName:x
        |vpiFullName:work@m.p2.x
      |vpiArgument:
      \_constant: , line:6:21, endln:6:21
      |vpiArgument:
      \_constant: , line:6:22, endln:6:22
      |vpiArgument:
      \_operation: , line:6:25, endln:6:38
        |vpiParent:
        \_sys_func_call: ($past), line:6:13, endln:6:18
        |vpiOpType:39
        |vpiOperand:
        \_ref_obj: (work@m.p2.clock), line:6:33, endln:6:38
          |vpiParent:
          \_operation: , line:6:25, endln:6:38
          |vpiName:clock
          |vpiFullName:work@m.p2.clock
      |vpiName:$past
    |vpiName:p2
  |vpiLetDecl:
  \_let_decl: (s), line:7:1, endln:7:24
    |vpiParent:
    \_module_inst: work@m (work@m), file:${SURELOG_DIR}/tests/LetExpr/dut.sv, line:2:1, endln:16:14
    |vpiExpr:
    \_sys_func_call: ($sampled), line:7:12, endln:7:23
      |vpiParent:
      \_let_decl: (s), line:7:1, endln:7:24
      |vpiArgument:
      \_ref_obj: (work@m.s.x), line:7:21, endln:7:22
        |vpiParent:
        \_sys_func_call: ($sampled), line:7:12, endln:7:23
        |vpiName:x
        |vpiFullName:work@m.s.x
      |vpiName:$sampled
    |vpiName:s
  |vpiDefName:work@m
  |vpiTop:1
  |vpiTopModule:1
  |vpiProcess:
  \_always: , line:9:1, endln:13:4
    |vpiParent:
    \_module_inst: work@m (work@m), file:${SURELOG_DIR}/tests/LetExpr/dut.sv, line:2:1, endln:16:14
    |vpiStmt:
    \_begin: (work@m), line:9:13, endln:13:4
      |vpiParent:
      \_always: , line:9:1, endln:13:4
      |vpiFullName:work@m
      |vpiStmt:
      \_immediate_assert: (a1), line:10:1, endln:10:19
        |vpiParent:
        \_begin: (work@m), line:9:13, endln:13:4
        |vpiName:a1
        |vpiExpr:
        \_let_expr: , line:10:12, endln:10:17
          |vpiParent:
          \_immediate_assert: (a1), line:10:1, endln:10:19
          |vpiArgument:
          \_ref_obj: (work@m.a1.a), line:10:15, endln:10:16
            |vpiParent:
            \_let_expr: , line:10:12, endln:10:17
            |vpiName:a
            |vpiFullName:work@m.a1.a
            |vpiActual:
            \_logic_var: (work@m.a), line:3:7, endln:3:8
          |vpiLetDecl:
          \_let_decl: (p1), line:4:1, endln:4:22
            |vpiParent:
            \_let_expr: , line:10:12, endln:10:17
            |vpiExpr:
            \_sys_func_call: ($past), line:4:13, endln:4:21
              |vpiParent:
              \_let_decl: (p1), line:4:1, endln:4:22
              |vpiArgument:
              \_ref_obj: (work@m.a1.p1.x), line:4:19, endln:4:20
                |vpiParent:
                \_sys_func_call: ($past), line:4:13, endln:4:21
                |vpiName:x
                |vpiFullName:work@m.a1.p1.x
              |vpiName:$past
            |vpiName:p1
      |vpiStmt:
      \_immediate_assert: (a2), line:11:1, endln:11:19
        |vpiParent:
        \_begin: (work@m), line:9:13, endln:13:4
        |vpiName:a2
        |vpiExpr:
        \_let_expr: , line:11:12, endln:11:17
          |vpiParent:
          \_immediate_assert: (a2), line:11:1, endln:11:19
          |vpiArgument:
          \_ref_obj: (work@m.a2.a), line:11:15, endln:11:16
            |vpiParent:
            \_let_expr: , line:11:12, endln:11:17
            |vpiName:a
            |vpiFullName:work@m.a2.a
            |vpiActual:
            \_logic_var: (work@m.a), line:3:7, endln:3:8
          |vpiLetDecl:
          \_let_decl: (p2), line:6:1, endln:6:41
            |vpiParent:
            \_let_expr: , line:11:12, endln:11:17
            |vpiExpr:
            \_sys_func_call: ($past), line:6:13, endln:6:18
              |vpiParent:
              \_let_decl: (p2), line:6:1, endln:6:41
              |vpiArgument:
              \_ref_obj: (work@m.a2.p2.x), line:6:19, endln:6:20
                |vpiParent:
                \_sys_func_call: ($past), line:6:13, endln:6:18
                |vpiName:x
                |vpiFullName:work@m.a2.p2.x
              |vpiArgument:
              \_constant: , line:6:21, endln:6:21
              |vpiArgument:
              \_constant: , line:6:22, endln:6:22
              |vpiArgument:
              \_operation: , line:6:25, endln:6:38
                |vpiParent:
                \_sys_func_call: ($past), line:6:13, endln:6:18
                |vpiOpType:39
                |vpiOperand:
                \_ref_obj: (work@m.a2.p2.clock), line:6:33, endln:6:38
                  |vpiParent:
                  \_operation: , line:6:25, endln:6:38
                  |vpiName:clock
                  |vpiFullName:work@m.a2.p2.clock
              |vpiName:$past
            |vpiName:p2
      |vpiStmt:
      \_immediate_assert: (a3), line:12:1, endln:12:18
        |vpiParent:
        \_begin: (work@m), line:9:13, endln:13:4
        |vpiName:a3
        |vpiExpr:
        \_let_expr: , line:12:12, endln:12:16
          |vpiParent:
          \_immediate_assert: (a3), line:12:1, endln:12:18
          |vpiArgument:
          \_ref_obj: (work@m.a3.a), line:12:14, endln:12:15
            |vpiParent:
            \_let_expr: , line:12:12, endln:12:16
            |vpiName:a
            |vpiFullName:work@m.a3.a
            |vpiActual:
            \_logic_var: (work@m.a), line:3:7, endln:3:8
          |vpiLetDecl:
          \_let_decl: (s), line:7:1, endln:7:24
            |vpiParent:
            \_let_expr: , line:12:12, endln:12:16
            |vpiExpr:
            \_sys_func_call: ($sampled), line:7:12, endln:7:23
              |vpiParent:
              \_let_decl: (s), line:7:1, endln:7:24
              |vpiArgument:
              \_ref_obj: (work@m.a3.s.x), line:7:21, endln:7:22
                |vpiParent:
                \_sys_func_call: ($sampled), line:7:12, endln:7:23
                |vpiName:x
                |vpiFullName:work@m.a3.s.x
              |vpiName:$sampled
            |vpiName:s
    |vpiAlwaysType:2
\_weaklyReferenced:
\_logic_typespec: , line:3:1, endln:3:6
  |vpiParent:
  \_logic_var: (work@m.a), line:3:7, endln:3:8
\_logic_typespec: , line:3:1, endln:3:6
===================
[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 1
[   NOTE] : 5


[roundtrip]: ${SURELOG_DIR}/tests/LetExpr/dut.sv | ${SURELOG_DIR}/build/regression/LetExpr/roundtrip/dut_000.sv | 7 | 16 |