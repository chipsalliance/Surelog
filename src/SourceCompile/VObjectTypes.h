
// This file is automatically generated by generate_parser_listener.tcl
// DO NOT EDIT

#ifndef VOBJECTTYPES_H
#define VOBJECTTYPES_H
enum VObjectType {
      sl0 = 0,
      sl1 = 1,
      slAccelerate_directive = 2,
      slACCEPT_ON = 3,
      slAction_block = 4,
      slActual_arg_expr = 5,
      slActual_arg_list = 6,
      slALWAYS = 7,
      slAlways_construct = 8,
      slAlwaysKeywd_Always = 9,
      slAlwaysKeywd_Comb = 10,
      slAlwaysKeywd_FF = 11,
      slAlwaysKeywd_Latch = 12,
      slAND = 13,
      slAnd_call = 14,
      slAnonymous_program = 15,
      slAnonymous_program_item = 16,
      slAnsi_port_declaration = 17,
      slArray_manipulation_call = 18,
      slArray_member_label = 19,
      slArray_method_name = 20,
      slArray_pattern_key = 21,
      slArray_range_expression = 22,
      slAssert_property_statement = 23,
      slAssertion_item = 24,
      slAssertion_item_declaration = 25,
      slAssertion_variable_declaration = 26,
      slAssign = 27,
      slAssignment_operator = 28,
      slAssignment_pattern = 29,
      slAssignment_pattern_expression = 30,
      slAssignment_pattern_expression_type = 31,
      slAssignment_pattern_key = 32,
      slAssignment_pattern_net_lvalue = 33,
      slAssignment_pattern_variable_lvalue = 34,
      slAssignOp_Add = 35,
      slAssignOp_ArithShiftLeft = 36,
      slAssignOp_ArithShiftRight = 37,
      slAssignOp_Assign = 38,
      slAssignOp_BitwAnd = 39,
      slAssignOp_BitwLeftShift = 40,
      slAssignOp_BitwOr = 41,
      slAssignOp_BitwRightShift = 42,
      slAssignOp_BitwXor = 43,
      slAssignOp_Div = 44,
      slAssignOp_Modulo = 45,
      slAssignOp_Mult = 46,
      slAssignOp_Sub = 47,
      slAssociative_dimension = 48,
      slAssume_property_statement = 49,
      slAttr_name = 50,
      slAttr_spec = 51,
      slAttribute_instance = 52,
      slAutoexpand_vectornets_directive = 53,
      slBegin_keywords_directive = 54,
      slBind_directive = 55,
      slBind_instantiation = 56,
      slBinModOp_BitwAnd = 57,
      slBinModOp_BitwOr = 58,
      slBinModOp_BitwXor = 59,
      slBinModOp_Equiv = 60,
      slBinModOp_LogicAnd = 61,
      slBinModOp_LogicOr = 62,
      slBinModOp_NotEqual = 63,
      slBinModOp_ReductXnor1 = 64,
      slBinModOp_ReductXnor2 = 65,
      slBinOp_ArithShiftLeft = 66,
      slBinOp_ArithShiftRight = 67,
      slBinOp_BitwAnd = 68,
      slBinOp_BitwOr = 69,
      slBinOp_BitwXor = 70,
      slBinOp_Div = 71,
      slBinOp_Equiv = 72,
      slBinOp_Equivalence = 73,
      slBinOp_FourStateLogicEqual = 74,
      slBinOp_FourStateLogicNotEqual = 75,
      slBinOp_Great = 76,
      slBinOp_GreatEqual = 77,
      slBinOp_Imply = 78,
      slBinOp_Less = 79,
      slBinOp_LessEqual = 80,
      slBinOp_LogicAnd = 81,
      slBinOp_LogicOr = 82,
      slBinOp_Minus = 83,
      slBinOp_Mult = 84,
      slBinOp_MultMult = 85,
      slBinOp_Not = 86,
      slBinOp_Percent = 87,
      slBinOp_Plus = 88,
      slBinOp_ReductNand = 89,
      slBinOp_ReductNor = 90,
      slBinOp_ReductXnor1 = 91,
      slBinOp_ReductXnor2 = 92,
      slBinOp_ShiftLeft = 93,
      slBinOp_ShiftRight = 94,
      slBinOp_WildcardEqual = 95,
      slBinOp_WildcardNotEqual = 96,
      slBinOp_WildEqual = 97,
      slBinOp_WildNotEqual = 98,
      slBins_Bins = 99,
      slBins_expression = 100,
      slBins_Ignore = 101,
      slBins_Illegal = 102,
      slBins_or_empty = 103,
      slBins_or_options = 104,
      slBins_selection = 105,
      slBins_selection_or_option = 106,
      slBit_select = 107,
      slBlock_event_expression = 108,
      slBlock_item_declaration = 109,
      slBlocking_assignment = 110,
      slBoolean_abbrev = 111,
      slBreakStmt = 112,
      slBuilt_in_method_call = 113,
      slCase = 114,
      slCase_generate_construct = 115,
      slCase_generate_item = 116,
      slCase_inside_item = 117,
      slCase_item = 118,
      slCase_keyword = 119,
      slCase_pattern_item = 120,
      slCase_statement = 121,
      slCaseX = 122,
      slCaseZ = 123,
      slCast = 124,
      slCasting_type = 125,
      slCell_clause = 126,
      slCelldefine_directive = 127,
      slChandle_type = 128,
      slCharge_strength = 129,
      slChecker = 130,
      slChecker_declaration = 131,
      slChecker_generate_item = 132,
      slChecker_instantiation = 133,
      slChecker_or_generate_item = 134,
      slChecker_or_generate_item_declaration = 135,
      slChecker_port_item = 136,
      slChecker_port_list = 137,
      slClass = 138,
      slClass_constraint = 139,
      slClass_constructor_declaration = 140,
      slClass_constructor_prototype = 141,
      slClass_declaration = 142,
      slClass_item = 143,
      slClass_keyword = 144,
      slClass_method = 145,
      slClass_new = 146,
      slClass_property = 147,
      slClass_scope = 148,
      slClass_type = 149,
      slClassItemQualifier_Local = 150,
      slClassItemQualifier_Protected = 151,
      slClassItemQualifier_Static = 152,
      slClocking_decl_assign = 153,
      slClocking_declaration = 154,
      slClocking_drive = 155,
      slClocking_event = 156,
      slClocking_item = 157,
      slClocking_skew = 158,
      slClockingDir_Inout = 159,
      slClockingDir_Input = 160,
      slClockingDir_InputOutput = 161,
      slClockingDir_Output = 162,
      slClockvar = 163,
      slClockvar_expression = 164,
      slCloseParens = 165,
      slCmos_switch_instance = 166,
      slCmosSwitchType_Cmos = 167,
      slCmosSwitchType_RCmos = 168,
      slColumnPartSelectOp = 169,
      slCombinational_body = 170,
      slCombinational_entry = 171,
      slComma_operator = 172,
      slComments = 173,
      slComplex_func_call = 174,
      slConcatenation = 175,
      slConcurrent_assertion_item = 176,
      slConcurrent_assertion_item_declaration = 177,
      slConcurrent_assertion_statement = 178,
      slCond_predicate = 179,
      slConditional_generate_construct = 180,
      slConditional_operator = 181,
      slConditional_statement = 182,
      slConfig = 183,
      slConfig_declaration = 184,
      slConfig_rule_statement = 185,
      slConsecutive_repetition = 186,
      slConst_or_range_expression = 187,
      slConst_type = 188,
      slConstant_assignment_pattern_expression = 189,
      slConstant_bit_select = 190,
      slConstant_cast = 191,
      slConstant_concatenation = 192,
      slConstant_expression = 193,
      slConstant_indexed_range = 194,
      slConstant_mintypmax_expression = 195,
      slConstant_multiple_concatenation = 196,
      slConstant_param_expression = 197,
      slConstant_part_select_range = 198,
      slConstant_primary = 199,
      slConstant_range = 200,
      slConstant_range_expression = 201,
      slConstant_select = 202,
      slConstantSelect = 203,
      slConstraint_block = 204,
      slConstraint_block_item = 205,
      slConstraint_declaration = 206,
      slConstraint_expression = 207,
      slConstraint_primary = 208,
      slConstraint_prototype = 209,
      slConstraint_set = 210,
      slConstSelect = 211,
      slContext_keyword = 212,
      slContinueStmt = 213,
      slContinuous_assign = 214,
      slControlled_timing_check_event = 215,
      slCover_cross = 216,
      slCover_point = 217,
      slCover_property_statement = 218,
      slCover_sequence_statement = 219,
      slCoverage_event = 220,
      slCoverage_option = 221,
      slCoverage_spec = 222,
      slCoverage_spec_or_option = 223,
      slCovergroup_declaration = 224,
      slCR = 225,
      slCross_body = 226,
      slCross_body_item = 227,
      slCross_item = 228,
      slCycle_delay = 229,
      slCycle_delay_const_range_expression = 230,
      slCycle_delay_range = 231,
      slData_declaration = 232,
      slData_type = 233,
      slData_type_or_implicit = 234,
      slData_type_or_void = 235,
      slDeassign = 236,
      slDecPartSelectOp = 237,
      slDefault = 238,
      slDefault_clause = 239,
      slDefault_decay_time_directive = 240,
      slDefault_nettype_directive = 241,
      slDefault_trireg_strenght_directive = 242,
      slDefault_value = 243,
      slDefaultSkew_Intput = 244,
      slDefaultSkew_IntputOutput = 245,
      slDefaultSkew_Output = 246,
      slDeferred_immediate_assert_statement = 247,
      slDeferred_immediate_assertion_item = 248,
      slDeferred_immediate_assertion_statement = 249,
      slDeferred_immediate_assume_statement = 250,
      slDeferred_immediate_cover_statement = 251,
      slDefine_directive = 252,
      slDefparam_assignment = 253,
      slDelay2 = 254,
      slDelay3 = 255,
      slDelay_control = 256,
      slDelay_mode_distributed_directive = 257,
      slDelay_mode_path_directive = 258,
      slDelay_mode_unit_directive = 259,
      slDelay_mode_zero_directive = 260,
      slDelay_or_event_control = 261,
      slDelay_value = 262,
      slDelayed_data = 263,
      slDelayed_reference = 264,
      slDescription = 265,
      slDesign_statement = 266,
      slDirective_in_macro = 267,
      slDisable_portfaults_directive = 268,
      slDisable_statement = 269,
      slDist_item = 270,
      slDist_list = 271,
      slDistWeight_AssignRange = 272,
      slDistWeight_AssignValue = 273,
      slDo = 274,
      slDollar_fullskew_timing_check = 275,
      slDollar_hold_timing_check = 276,
      slDollar_keyword = 277,
      slDollar_nochange_timing_check = 278,
      slDollar_period_timing_check = 279,
      slDollar_recovery_timing_check = 280,
      slDollar_recrem_timing_check = 281,
      slDollar_removal_timing_check = 282,
      slDollar_root_keyword = 283,
      slDollar_setup_timing_check = 284,
      slDollar_setuphold_timing_check = 285,
      slDollar_skew_timing_check = 286,
      slDollar_timeskew_timing_check = 287,
      slDollar_width_timing_check = 288,
      slDot = 289,
      slDotStar = 290,
      slDpi_import_export = 291,
      slDrive_strength = 292,
      slDynamic_array_new = 293,
      slEdge_control_specifier = 294,
      slEdge_descriptor = 295,
      slEdge_Edge = 296,
      slEdge_indicator = 297,
      slEdge_input_list = 298,
      slEdge_Negedge = 299,
      slEdge_Posedge = 300,
      slEdge_sensitive_path_declaration = 301,
      slEdge_symbol = 302,
      slElaboration_system_task = 303,
      slElse = 304,
      slElse_directive = 305,
      slElseif_directive = 306,
      slElseif_directive_in_macro_body = 307,
      slElsif_directive = 308,
      slElsif_directive_in_macro_body = 309,
      slEmpty_queue = 310,
      slEnable_gate_instance = 311,
      slEnable_portfaults_directive = 312,
      slEnableGateType_Bufif0 = 313,
      slEnableGateType_Bufif1 = 314,
      slEnableGateType_Notif0 = 315,
      slEnableGateType_Notif1 = 316,
      slEnd = 317,
      slEnd_edge_offset = 318,
      slEnd_keywords_directive = 319,
      slEndcase = 320,
      slEndcelldefine_directive = 321,
      slEndchecker = 322,
      slEndclass = 323,
      slEndclocking = 324,
      slEndconfig = 325,
      slEndfunction = 326,
      slEndgenerate = 327,
      slEndgroup = 328,
      slEndif_directive = 329,
      slEndinterface = 330,
      slEndmodule = 331,
      slEndpackage = 332,
      slEndprimitive = 333,
      slEndprogram = 334,
      slEndproperty = 335,
      slEndprotect_directive = 336,
      slEndprotected_directive = 337,
      slEndsequence = 338,
      slEndspecify = 339,
      slEndtable = 340,
      slEndtask = 341,
      slEnum_base_type = 342,
      slEnum_keyword = 343,
      slEnum_name_declaration = 344,
      slEscaped_identifier = 345,
      slEscaped_macro_definition_body = 346,
      slEscaped_macro_definition_body_alt1 = 347,
      slEscaped_macro_definition_body_alt2 = 348,
      slEscapedCR = 349,
      slEvent_based_flag = 350,
      slEvent_control = 351,
      slEvent_expression = 352,
      slEvent_trigger = 353,
      slEvent_type = 354,
      slEVENTUALLY = 355,
      slEveryRule = 356,
      slExpand_vectornets_directive = 357,
      slExpect_property_statement = 358,
      slExport = 359,
      slExpression = 360,
      slExpression_or_cond_pattern = 361,
      slExpression_or_dist = 362,
      slExtends = 363,
      slExtern_constraint_declaration = 364,
      slExtern_qualifier = 365,
      slExtern_tf_declaration = 366,
      slFile_path_spec = 367,
      slFinal_construct = 368,
      slFor = 369,
      slFor_initialization = 370,
      slFor_step = 371,
      slFor_step_assignment = 372,
      slFor_variable_declaration = 373,
      slForce = 374,
      slForeach = 375,
      slForever = 376,
      slFull_edge_sensitive_path_description = 377,
      slFull_path_description = 378,
      slFunction_body_declaration = 379,
      slFunction_data_type = 380,
      slFunction_data_type_or_implicit = 381,
      slFunction_declaration = 382,
      slFunction_name_decl = 383,
      slFunction_prototype = 384,
      slFunction_statement_or_null = 385,
      slGate_instantiation = 386,
      slGenerate_block = 387,
      slGenerate_interface_block = 388,
      slGenerate_interface_case_statement = 389,
      slGenerate_interface_conditional_statement = 390,
      slGenerate_interface_item = 391,
      slGenerate_interface_loop_statement = 392,
      slGenerate_interface_named_block = 393,
      slGenerate_item = 394,
      slGenerate_module_block = 395,
      slGenerate_module_case_statement = 396,
      slGenerate_module_conditional_statement = 397,
      slGenerate_module_item = 398,
      slGenerate_module_loop_statement = 399,
      slGenerate_module_named_block = 400,
      slGenerate_region = 401,
      slGenerated_interface_instantiation = 402,
      slGenerated_module_instantiation = 403,
      slGenericElementType = 404,
      slGenvar_assignment = 405,
      slGenvar_decl_assignment = 406,
      slGenvar_declaration = 407,
      slGenvar_initialization = 408,
      slGenvar_interface_case_item = 409,
      slGenvar_iteration = 410,
      slGenvar_module_case_item = 411,
      slGlobal = 412,
      slGoto_repetition = 413,
      slHierarchical_btf_identifier = 414,
      slHierarchical_identifier = 415,
      slHierarchical_instance = 416,
      slHighZ0 = 417,
      slHighZ1 = 418,
      slIdentifier = 419,
      slIdentifier_in_macro_body = 420,
      slIdentifier_list = 421,
      slIF = 422,
      slIf_generate_construct = 423,
      slIfdef_directive = 424,
      slIfdef_directive_in_macro_body = 425,
      slIFF = 426,
      slIff = 427,
      slIfndef_directive = 428,
      slIfndef_directive_in_macro_body = 429,
      slImmediate_assertion_statement = 430,
      slImplements = 431,
      slImplicit_class_handle = 432,
      slImplicit_data_type = 433,
      slIMPLIES = 434,
      slImport = 435,
      slInc_or_dec_expression = 436,
      slInc_or_dec_operator = 437,
      slIncDec_MinusMinus = 438,
      slIncDec_PlusPlus = 439,
      slInclude_directive = 440,
      slInclude_statement = 441,
      slIncPartSelectOp = 442,
      slIndexed_range = 443,
      slInitial_construct = 444,
      slInitVal_1TickB0 = 445,
      slInitVal_1Tickb0 = 446,
      slInitVal_1TickB1 = 447,
      slInitVal_1Tickb1 = 448,
      slInitVal_1TickBX = 449,
      slInitVal_1TickBx = 450,
      slInitVal_1TickbX = 451,
      slInitVal_1Tickbx = 452,
      slInitVal_Integral = 453,
      slInout_declaration = 454,
      slInput_declaration = 455,
      slInsideOp = 456,
      slInst_clause = 457,
      slInst_name = 458,
      slIntConst = 459,
      slInteger_type = 460,
      slIntegerAtomType_Byte = 461,
      slIntegerAtomType_Int = 462,
      slIntegerAtomType_LongInt = 463,
      slIntegerAtomType_Shortint = 464,
      slIntegerAtomType_Time = 465,
      slInterface = 466,
      slInterface_ansi_header = 467,
      slInterface_class_declaration = 468,
      slInterface_class_item = 469,
      slInterface_class_keyword = 470,
      slInterface_class_method = 471,
      slInterface_class_type = 472,
      slInterface_declaration = 473,
      slInterface_identifier = 474,
      slInterface_instantiation = 475,
      slInterface_item = 476,
      slInterface_nonansi_header = 477,
      slInterface_or_generate_item = 478,
      slInterface_port_declaration = 479,
      slInterface_port_header = 480,
      slIntVec_TypeBit = 481,
      slIntVec_TypeLogic = 482,
      slIntVec_TypeReg = 483,
      slJoin_any_keyword = 484,
      slJoin_keyword = 485,
      slJoin_none_keyword = 486,
      slJump_statement = 487,
      slLarge = 488,
      slLet_declaration = 489,
      slLet_formal_type = 490,
      slLet_port_item = 491,
      slLet_port_list = 492,
      slLevel_input_list = 493,
      slLevel_symbol = 494,
      slLiblist_clause = 495,
      slLibrary_declaration = 496,
      slLibrary_descriptions = 497,
      slLibrary_text = 498,
      slLifetime_Automatic = 499,
      slLifetime_Static = 500,
      slLine_directive = 501,
      slList_of_arguments = 502,
      slList_of_checker_port_connections = 503,
      slList_of_clocking_decl_assign = 504,
      slList_of_cross_items = 505,
      slList_of_defparam_assignments = 506,
      slList_of_interface_identifiers = 507,
      slList_of_net_assignments = 508,
      slList_of_net_decl_assignments = 509,
      slList_of_param_assignments = 510,
      slList_of_parameter_assignments = 511,
      slList_of_path_delay_expressions = 512,
      slList_of_path_inputs = 513,
      slList_of_path_outputs = 514,
      slList_of_port_connections = 515,
      slList_of_port_declarations = 516,
      slList_of_port_identifiers = 517,
      slList_of_ports = 518,
      slList_of_specparam_assignments = 519,
      slList_of_tf_variable_identifiers = 520,
      slList_of_type_assignments = 521,
      slList_of_variable_assignments = 522,
      slList_of_variable_decl_assignments = 523,
      slList_of_variable_identifiers = 524,
      slList_of_variable_port_identifiers = 525,
      slList_of_virtual_interface_decl = 526,
      slLocal_parameter_declaration = 527,
      slLoop_generate_construct = 528,
      slLoop_statement = 529,
      slLoop_variables = 530,
      slMacro_actual_args = 531,
      slMacro_arg = 532,
      slMacro_arguments = 533,
      slMacro_definition = 534,
      slMacroInstanceNoArgs = 535,
      slMacroInstanceWithArgs = 536,
      slMatches = 537,
      slMedium = 538,
      slMethod_call = 539,
      slMethod_call_body = 540,
      slMethod_call_root = 541,
      slMethod_prototype = 542,
      slMethodQualifier_ClassItem = 543,
      slMethodQualifier_Virtual = 544,
      slMintypmax_expression = 545,
      slModport_hierarchical_ports_declaration = 546,
      slModport_item = 547,
      slModport_ports_declaration = 548,
      slModport_simple_port = 549,
      slModport_simple_ports_declaration = 550,
      slModport_tf_port = 551,
      slModport_tf_ports_declaration = 552,
      slModule = 553,
      slModule_ansi_header = 554,
      slModule_common_item = 555,
      slModule_declaration = 556,
      slModule_instantiation = 557,
      slModule_item = 558,
      slModule_keyword = 559,
      slModule_nonansi_header = 560,
      slModule_or_generate_item = 561,
      slModule_or_generate_item_declaration = 562,
      slModule_path_concatenation = 563,
      slModule_path_expression = 564,
      slModule_path_mintypmax_expression = 565,
      slModule_path_multiple_concatenation = 566,
      slModule_path_primary = 567,
      slModuleInstance = 568,
      slMos_switch_instance = 569,
      slMosSwitchType_NMos = 570,
      slMosSwitchType_PMos = 571,
      slMosSwitchType_RNMos = 572,
      slMosSwitchType_RPMos = 573,
      slMultiline_args_macro_definition = 574,
      slMultiline_no_args_macro_definition = 575,
      slMultiple_concatenation = 576,
      slN_input_gate_instance = 577,
      slN_output_gate_instance = 578,
      slName_of_instance = 579,
      slNamed_checker_port_connection = 580,
      slNamed_parameter_assignment = 581,
      slNamed_port_connection = 582,
      slNet_alias = 583,
      slNet_assignment = 584,
      slNet_decl_assignment = 585,
      slNet_declaration = 586,
      slNet_lvalue = 587,
      slNet_port_header = 588,
      slNet_port_type = 589,
      slNet_type = 590,
      slNet_type_declaration = 591,
      slNetType_Supply0 = 592,
      slNetType_Supply1 = 593,
      slNetType_Tri = 594,
      slNetType_Tri0 = 595,
      slNetType_Tri1 = 596,
      slNetType_TriAnd = 597,
      slNetType_TriOr = 598,
      slNetType_TriReg = 599,
      slNetType_Uwire = 600,
      slNetType_Wand = 601,
      slNetType_Wire = 602,
      slNetType_Wor = 603,
      slNext_state = 604,
      slNInpGate_And = 605,
      slNInpGate_Nand = 606,
      slNInpGate_Nor = 607,
      slNInpGate_Or = 608,
      slNInpGate_Xnor = 609,
      slNInpGate_Xor = 610,
      slNoaccelerate_directive = 611,
      slNoexpand_vectornets_directive = 612,
      slNon_consecutive_repetition = 613,
      slNON_OVERLAP_IMPLY = 614,
      slNon_port_interface_item = 615,
      slNon_port_module_item = 616,
      slNon_port_program_item = 617,
      slNonblocking_assignment = 618,
      slNonBlockingTriggerEvent = 619,
      slNonIntType_Real = 620,
      slNonIntType_RealTime = 621,
      slNonIntType_ShortReal = 622,
      slNONOVERLAPPED = 623,
      slNonrange_select = 624,
      slNonrange_variable_lvalue = 625,
      slNoremove_gatenames_directive = 626,
      slNoremove_netnames_directive = 627,
      slNosuppress_faults_directive = 628,
      slNOT = 629,
      slNotifier = 630,
      slNoType = 631,
      slNounconnected_drive_directive = 632,
      slNOutGate_Buf = 633,
      slNOutGate_Not = 634,
      slNull = 635,
      slNull_keyword = 636,
      slNull_rule = 637,
      slNumber = 638,
      slNumber_1TickB0 = 639,
      slNumber_1Tickb0 = 640,
      slNumber_1TickB1 = 641,
      slNumber_1Tickb1 = 642,
      slNumber_1TickBX = 643,
      slNumber_1TickBx = 644,
      slNumber_1TickbX = 645,
      slNumber_1Tickbx = 646,
      slNumber_Integral = 647,
      slNumber_Real = 648,
      slNumber_Tick0 = 649,
      slNumber_Tick1 = 650,
      slNumber_TickB0 = 651,
      slNumber_Tickb0 = 652,
      slNumber_TickB1 = 653,
      slNumber_Tickb1 = 654,
      slOpen_range_list = 655,
      slOpenParens = 656,
      slOperator_assignment = 657,
      slOR = 658,
      slOr_call = 659,
      slOr_operator = 660,
      slOrdered_checker_port_connection = 661,
      slOrdered_parameter_assignment = 662,
      slOrdered_port_connection = 663,
      slOutput_declaration = 664,
      slOutput_symbol = 665,
      slOVERLAP_IMPLY = 666,
      slOVERLAPPED = 667,
      slOverload_declaration = 668,
      slOverload_proto_formals = 669,
      slOverloadOp_Div = 670,
      slOverloadOp_Equal = 671,
      slOverloadOp_Equiv = 672,
      slOverloadOp_Greater = 673,
      slOverloadOp_GreaterEqual = 674,
      slOverloadOp_Less = 675,
      slOverloadOp_LessEqual = 676,
      slOverloadOp_Minus = 677,
      slOverloadOp_MinusMinus = 678,
      slOverloadOp_Mult = 679,
      slOverloadOp_NotEqual = 680,
      slOverloadOp_Percent = 681,
      slOverloadOp_Plus = 682,
      slOverloadOp_PlusPlus = 683,
      slOverloadOp_StarStar = 684,
      slPackage = 685,
      slPackage_declaration = 686,
      slPackage_export_declaration = 687,
      slPackage_import_declaration = 688,
      slPackage_import_item = 689,
      slPackage_item = 690,
      slPackage_or_generate_item_declaration = 691,
      slPackage_scope = 692,
      slPacked_dimension = 693,
      slPacked_keyword = 694,
      slPaired_parens = 695,
      slPar_block = 696,
      slParallel_edge_sensitive_path_description = 697,
      slParallel_path_description = 698,
      slParam_assignment = 699,
      slParam_expression = 700,
      slParameter_declaration = 701,
      slParameter_override = 702,
      slParameter_port_declaration = 703,
      slParameter_port_list = 704,
      slParameter_value_assignment = 705,
      slPart_select_op = 706,
      slPart_select_op_column = 707,
      slPart_select_range = 708,
      slPass_enable_switch_instance = 709,
      slPass_switch_instance = 710,
      slPassEnSwitch_RTranif0 = 711,
      slPassEnSwitch_RTranif1 = 712,
      slPassEnSwitch_Tranif0 = 713,
      slPassEnSwitch_Tranif1 = 714,
      slPassSwitch_RTran = 715,
      slPassSwitch_Tran = 716,
      slPath_declaration = 717,
      slPath_delay_expression = 718,
      slPath_delay_value = 719,
      slPattern = 720,
      slPort = 721,
      slPort_declaration = 722,
      slPort_expression = 723,
      slPort_reference = 724,
      slPortDir_Inout = 725,
      slPortDir_Inp = 726,
      slPortDir_Out = 727,
      slPortDir_Ref = 728,
      slPortInst = 729,
      slPound_delay = 730,
      slPound_delay_value = 731,
      slPound_Pound_delay = 732,
      slPound_pound_delay = 733,
      slPragma_directive = 734,
      slPragma_expression = 735,
      slPragma_value = 736,
      slPrimary = 737,
      slPrimary_literal = 738,
      slPrimitive = 739,
      slPrimitiveInstance = 740,
      slPriority = 741,
      slProcedural_assertion_statement = 742,
      slProcedural_continuous_assignment = 743,
      slProcedural_timing_control = 744,
      slProcedural_timing_control_statement = 745,
      slProduction = 746,
      slProduction_item = 747,
      slProgram = 748,
      slProgram_ansi_header = 749,
      slProgram_declaration = 750,
      slProgram_generate_item = 751,
      slProgram_instantiation = 752,
      slProgram_item = 753,
      slProgram_nonansi_header = 754,
      slProperty_actual_arg = 755,
      slProperty_case_item = 756,
      slProperty_declaration = 757,
      slProperty_expr = 758,
      slProperty_formal_type = 759,
      slProperty_instance = 760,
      slProperty_lvar_port_direction = 761,
      slProperty_port_item = 762,
      slProperty_port_list = 763,
      slProperty_spec = 764,
      slPropQualifier_ClassItem = 765,
      slPropQualifier_Rand = 766,
      slPropQualifier_Randc = 767,
      slProtect_directive = 768,
      slProtected_directive = 769,
      slPs_identifier = 770,
      slPs_or_hierarchical_array_identifier = 771,
      slPs_or_hierarchical_identifier = 772,
      slPs_or_hierarchical_sequence_identifier = 773,
      slPs_type_identifier = 774,
      slPull0 = 775,
      slPull1 = 776,
      slPull_gate_instance = 777,
      slPulldown = 778,
      slPulldown_strength = 779,
      slPullup = 780,
      slPullup_strength = 781,
      slPulse_control_specparam = 782,
      slPulsestyle_declaration = 783,
      slPure = 784,
      slPure_keyword = 785,
      slPure_virtual_qualifier = 786,
      slQmark = 787,
      slQueue_dimension = 788,
      slRandcase_item = 789,
      slRandcase_statement = 790,
      slRandomize_call = 791,
      slRandomQualifier_Rand = 792,
      slRandomQualifier_RandC = 793,
      slRandsequence_statement = 794,
      slRange_expression = 795,
      slRange_list = 796,
      slRealConst = 797,
      slRef_declaration = 798,
      slReference_event = 799,
      slREJECT_ON = 800,
      slRelease = 801,
      slRemain_active_flag = 802,
      slRemove_gatename_directive = 803,
      slRemove_netname_directive = 804,
      slRepeat = 805,
      slRepeat_range = 806,
      slResetall_directive = 807,
      slRestrict_property_statement = 808,
      slReturnStmt = 809,
      slRs_case = 810,
      slRs_case_item = 811,
      slRs_code_block = 812,
      slRs_if_else = 813,
      slRs_prod = 814,
      slRs_production_list = 815,
      slRs_repeat = 816,
      slRs_rule = 817,
      slS_ALWAYS = 818,
      slS_EVENTUALLY = 819,
      slS_NEXTTIME = 820,
      slS_UNTIL = 821,
      slScalar_1TickB0 = 822,
      slScalar_1Tickb0 = 823,
      slScalar_1TickB1 = 824,
      slScalar_1Tickb1 = 825,
      slScalar_Integral = 826,
      slScalar_TickB0 = 827,
      slScalar_Tickb0 = 828,
      slScalar_TickB1 = 829,
      slScalar_Tickb1 = 830,
      slScalar_timing_check_condition = 831,
      slSelect = 832,
      slSelect_condition = 833,
      slSelect_expression = 834,
      slSeq_block = 835,
      slSeq_input_list = 836,
      slSeqFormatType_Data = 837,
      slSeqFormatType_Sequence = 838,
      slSeqFormatType_Untyped = 839,
      slSeqLvarPortDir_Inout = 840,
      slSeqLvarPortDir_Input = 841,
      slSeqLvarPortDir_Output = 842,
      slSequence_actual_arg = 843,
      slSequence_declaration = 844,
      slSequence_expr = 845,
      slSequence_instance = 846,
      slSequence_list_of_arguments = 847,
      slSequence_match_item = 848,
      slSequence_method_call = 849,
      slSequence_port_item = 850,
      slSequence_port_list = 851,
      slSequential_body = 852,
      slSequential_entry = 853,
      slShowcancelled_declaration = 854,
      slSigned_directive = 855,
      slSigning_Signed = 856,
      slSigning_Unsigned = 857,
      slSimple_args_macro_definition = 858,
      slSimple_args_macro_definition_in_macro_body = 859,
      slSimple_immediate_assert_statement = 860,
      slSimple_immediate_assertion_statement = 861,
      slSimple_immediate_assume_statement = 862,
      slSimple_immediate_cover_statement = 863,
      slSimple_macro_definition_body = 864,
      slSimple_macro_definition_body_in_macro_body = 865,
      slSimple_no_args_macro_definition = 866,
      slSimple_no_args_macro_definition_in_macro_body = 867,
      slSimple_path_declaration = 868,
      slSimple_type = 869,
      slSlice_size = 870,
      slSlline = 871,
      slSmall = 872,
      slSolve_before_list = 873,
      slSource_text = 874,
      slSpaces = 875,
      slSpecify_block = 876,
      slSpecify_input_terminal_descriptor = 877,
      slSpecify_item = 878,
      slSpecify_output_terminal_descriptor = 879,
      slSpecify_terminal_descriptor = 880,
      slSpecparam_assignment = 881,
      slSpecparam_declaration = 882,
      slStamptime_condition = 883,
      slStart_edge_offset = 884,
      slState_dependent_path_declaration = 885,
      slStatement = 886,
      slStatement_item = 887,
      slStatement_or_null = 888,
      slStream_concatenation = 889,
      slStream_expression = 890,
      slStream_operator = 891,
      slStreaming_concatenation = 892,
      slStrength0 = 893,
      slStrength1 = 894,
      slString = 895,
      slString_blob = 896,
      slString_type = 897,
      slString_value = 898,
      slStringConst = 899,
      slStringLiteral = 900,
      slSTRONG = 901,
      slStrong0 = 902,
      slStrong1 = 903,
      slStruct_keyword = 904,
      slStruct_union = 905,
      slStruct_union_member = 906,
      slStructure_pattern_key = 907,
      slSubroutine_call = 908,
      slSubroutine_call_statement = 909,
      slSuper_dot_new = 910,
      slSuper_keyword = 911,
      slSupply0 = 912,
      slSupply1 = 913,
      slSuppress_faults_directive = 914,
      slSurelog_macro_not_defined = 915,
      slSv_file_directive = 916,
      slSv_interface = 917,
      slSv_line_directive = 918,
      slSv_package = 919,
      slSYNC_ACCEPT_ON = 920,
      slSYNC_REJECT_ON = 921,
      slSystem_task = 922,
      slSystem_task_names = 923,
      slSystem_timing_check = 924,
      slT0x_path_delay_expression = 925,
      slT0z_path_delay_expression = 926,
      slT01_path_delay_expression = 927,
      slT1x_path_delay_expression = 928,
      slT1z_path_delay_expression = 929,
      slT10_path_delay_expression = 930,
      slT_path_delay_expression = 931,
      slTagged = 932,
      slTagged_keyword = 933,
      slTask_body_declaration = 934,
      slTask_declaration = 935,
      slTask_name_decl = 936,
      slTask_prototype = 937,
      slText_blob = 938,
      slTf_item_declaration = 939,
      slTf_port_declaration = 940,
      slTf_port_item = 941,
      slTf_port_list = 942,
      slTfall_path_delay_expression = 943,
      slTfPortDir_ConstRef = 944,
      slTfPortDir_Inout = 945,
      slTfPortDir_Inp = 946,
      slTfPortDir_Out = 947,
      slTfPortDir_Ref = 948,
      slThis = 949,
      slThis_dot_super = 950,
      slThis_keyword = 951,
      slThreshold = 952,
      slTime_literal = 953,
      slTime_unit = 954,
      slTimescale_directive = 955,
      slTimeUnitsDecl_TimePrecision = 956,
      slTimeUnitsDecl_TimePrecisionTimeUnit = 957,
      slTimeUnitsDecl_TimeUnit = 958,
      slTimeUnitsDecl_TimeUnitDiv = 959,
      slTimeUnitsDecl_TimeUnitTimePrecision = 960,
      slTiming_check_condition = 961,
      slTiming_check_event = 962,
      slTiming_check_limit = 963,
      slTimingCheckEventControl_Edge = 964,
      slTimingCheckEventControl_Negedge = 965,
      slTimingCheckEventControl_Posedge = 966,
      slTop_directives = 967,
      slTop_level_library_rule = 968,
      slTop_level_rule = 969,
      slTrans_list = 970,
      slTrans_range_list = 971,
      slTrans_set = 972,
      slTrise_path_delay_expression = 973,
      slTx0_path_delay_expression = 974,
      slTx1_path_delay_expression = 975,
      slTxz_path_delay_expression = 976,
      slType_declaration = 977,
      slType_reference = 978,
      slTz0_path_delay_expression = 979,
      slTz1_path_delay_expression = 980,
      slTz_path_delay_expression = 981,
      slTzx_path_delay_expression = 982,
      slUdp_ansi_declaration = 983,
      slUdp_body = 984,
      slUdp_declaration = 985,
      slUdp_declaration_port_list = 986,
      slUdp_initial_statement = 987,
      slUdp_input_declaration = 988,
      slUdp_instance = 989,
      slUdp_instantiation = 990,
      slUdp_nonansi_declaration = 991,
      slUdp_output_declaration = 992,
      slUdp_port_declaration = 993,
      slUdp_port_list = 994,
      slUdp_reg_declaration = 995,
      slUnary_BitwAnd = 996,
      slUnary_BitwOr = 997,
      slUnary_BitwXor = 998,
      slUnary_Minus = 999,
      slUnary_Not = 1000,
      slUnary_Plus = 1001,
      slUnary_ReductNand = 1002,
      slUnary_ReductNor = 1003,
      slUnary_ReductXnor1 = 1004,
      slUnary_ReductXnor2 = 1005,
      slUnary_Tilda = 1006,
      slUnaryModOp_BitwAnd = 1007,
      slUnaryModOp_BitwOr = 1008,
      slUnaryModOp_BitwXor = 1009,
      slUnaryModOp_Not = 1010,
      slUnaryModOp_ReductNand = 1011,
      slUnaryModOp_ReductNor = 1012,
      slUnaryModOp_ReductXNor1 = 1013,
      slUnaryModOp_ReductXnor2 = 1014,
      slUnaryModOp_Tilda = 1015,
      slUnbased_unsized_literal = 1016,
      slUnconnected_drive_directive = 1017,
      slUndef_directive = 1018,
      slUndefineall_directive = 1019,
      slUnion_keyword = 1020,
      slUnique = 1021,
      slUnique0 = 1022,
      slUnique_call = 1023,
      slUnique_priority = 1024,
      slUniqueness_constraint = 1025,
      slUnpacked_dimension = 1026,
      slUnsigned_directive = 1027,
      slUnsized_dimension = 1028,
      slUnterminated_string = 1029,
      slUNTIL = 1030,
      slUse_clause = 1031,
      slUse_clause_config = 1032,
      slUselib_directive = 1033,
      slValue_range = 1034,
      slVar_data_type = 1035,
      slVar_type = 1036,
      slVariable_assignment = 1037,
      slVariable_decl_assignment = 1038,
      slVariable_declaration = 1039,
      slVariable_dimension = 1040,
      slVariable_lvalue = 1041,
      slVariable_port_header = 1042,
      slVariable_port_type = 1043,
      slVirtual = 1044,
      slVirtual_interface_declaration = 1045,
      slWait_statement = 1046,
      slWEAK = 1047,
      slWeak0 = 1048,
      slWeak1 = 1049,
      slWhile = 1050,
      slWith = 1051,
      slX = 1052,
      slXor_call = 1053,
      slZ = 1054,
};

#endif /* VOBJECTTYPES_H */

